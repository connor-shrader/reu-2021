library(reshape)
?melt
source('~/github/reu-2021/code/figures/test-plots.r', echo=TRUE)
sub_results <- subset_data(aggregate_results, p = 100, n = 200)[c("st_dev", "type", "corr", "model_name", "mean_test_mse")]
View(sub_results)
source('~/github/reu-2021/code/figures/test-plots.r', echo=TRUE)
View(sub_results)
source('~/github/reu-2021/code/figures/test-plots.r', echo=TRUE)
View(y)
View(y)
y <- round(y[, -c(1, 2)], 3)
View(y)
print(xtable(y, type = "latex"), file = "test.tex")
install.packages("xtable")
library(xtable)
print(xtable(y, type = "latex"), file = "test.tex")
x1 <- tabular(st_dev + model_name ~ (type + corr) * mean)
library(tabular)
library(tables)
x1 <- tabular(st_dev + model_name ~ (type + corr) * mean)
x1 <- tabular(st_dev + model_name ~ (type + corr) * mean, data = sub_results)
View(x1)
x1
x1 <- tabular(st_dev * model_name ~ (type * corr) * mean, data = sub_results)
x1
x1 <- tabular(st_dev * model_name ~ (type * corr), data = sub_results)
x1
Mean <- function(x) base::mean(x, na.rm=TRUE)
x1 <- tabular(st_dev * model_name ~ (type * corr) * Mean, data = sub_results)
x1
x1 <- tabular(st_dev * model_name ~ (type * corr) * mean, data = sub_results)
x1
x1 <- tabular(st_dev * model_name ~ (type * corr * mean_test_mse) * mean, data = sub_results)
x1
x1 <- tabular(st_dev * model_name ~ (type * corr * mean_test_mse) * Mean, data = sub_results)
x1
x2 <- x1[x1[, 1] > 0]
x2
x2 <- x1[x1[, 1] > 0, ]
x2
x1
x1[x1, 1]
x1[x1, 1]
x1[, 1]
x1[, 1][x1[, 1] > 0, ]
x1[, 1][x1[, 2] > 0, ]
x1[, 1][x1[, 1] > 0, ]
x1[, 1]
x1[, 1][!is.nan(x1[, 1]), ]
NaN > 0
x1
is.numeric
is.numeric(1)
x1[is.numeric(x1[1, ]), ]
x1[is.numeric(x1[, 1]), ]
x1[x1[, 1] > 0, ]
x2 <- x1[x1[, 1] > 0, ]
x3 <- x2[x2[, 1] > 0, ]
x2[x2[, 1] > 0, ]
x1
x1 <- tabular((st_dev * model_name + 1) ~ (type * corr * mean_test_mse) * mean, data = sub_results)
x1
x1 <- tabular((st_dev * model_name + 1) ~ (N = 1) + (type * corr * mean_test_mse) * mean, data = sub_results)
x1
x1[x1[, 1] > 0, ]
x2 <- x1[x1[, 1] > 0, ]
x3 <- x2[, x2[1, ] > 0]
x3
x1 <- tabular((st_dev * model_name + 1) ~ (N = 1) + (type * corr * mean_test_mse) * Mean, data = sub_results)
x1
Mean <- function(x) {
m <- mean(x)
if (is.nan(m)) {
return(0)
}
}
x1 <- tabular((st_dev * model_name + 1) ~ (N = 1) + (type * corr * mean_test_mse) * Mean, data = sub_results)
warnings()
x1
Mean <- function(x) {
m <- mean(x)
}
x1 <- tabular((st_dev * model_name + 1) ~ (N = 1) + (type * corr * mean_test_mse) * Mean, data = sub_results)
x1
Mean <- function(x) {
m <- mean(x)
print(m)
return(m)
}
x1 <- tabular((st_dev * model_name + 1) ~ (N = 1) + (type * corr * mean_test_mse) * Mean, data = sub_results)
}
Mean <- function(x) {
m <- mean(x)
if(!is.nan(m)) {
return(m)
}
return(rep(0, length(x)))
}
x1 <- tabular((st_dev * model_name + 1) ~ (N = 1) + (type * corr * mean_test_mse) * Mean, data = sub_results)
warnings()
Mean <- function(x) {
m <- mean(x)
if(!is.nan(m)) {
return(m)
}
return(m)
return(rep(0, length(x)))
}
x1 <- tabular((st_dev * model_name + 1) ~ (N = 1) + (type * corr * mean_test_mse) * Mean, data = sub_results)
length(0)
length(numeric(0))
?numeric
length(rep(0, 1))
x1
Mean <- function(x) {
if(length(x) == 0) {
return 0
}
return(mean(x))
}
Mean <- function(x) {
if(length(x) == 0) {
return(0)
}
return(mean(x))
}
x1 <- tabular((st_dev * model_name + 1) ~ (N = 1) + (type * corr * mean_test_mse) * Mean, data = sub_results)
x1
x1 <- tabular((st_dev * model_name) ~ (type * corr * mean_test_mse) * Mean, data = sub_results)
x2 <- x1[x1[, 1] > 0, ]
x2
x3 <- x2[, x2[1, ] > 0]
x3
SD <- function(x) {
if(length(x) == 0) {
return(-1)
}
return(sd(x))
}
x1 <- tabular((st_dev * model_name) ~ (type * corr * mean_test_mse) * (Mean * SD), data = sub_results)
x1 <- tabular((st_dev * model_name) ~ (type * corr * mean_test_mse) * (Mean + SD), data = sub_results)
x2 <- x1[x1[, 1] > 0, ]
x3 <- x2[, x2[1, ] > 0]
x3
SD <- function(x) {
if(length(x) == 0) {
return(-1)
}
return(sd(x))
}
x1 <- tabular((st_dev * model_name) ~ (type * corr * mean_test_mse) * (Mean + SD), data = sub_results)
x1
Mean <- function(x) {
if(length(x) == 0) {
return(-1)
}
return(mean(x))
}
x1 <- tabular((st_dev * model_name) ~ (type * corr * mean_test_mse) * (Mean + SD), data = sub_results)
x1
x1 <- tabular((st_dev * model_name) ~ (type * corr * (mean_test_mse + sd_test_mse) * Mean, data = sub_results))
x1 <- tabular((st_dev * model_name) ~ (type * corr * (mean_test_mse + sd_test_mse) * Mean, data = sub_results))
x1 <- tabular((st_dev * model_name) ~ (type * corr * (mean_test_mse + sd_test_mse) * Mean), data = sub_results)
x1 <- tabular((st_dev * model_name) ~ (type * corr * (mean_test_mse + sd_test_mse)) * Mean, data = sub_results)
sub_results <- subset_data(aggregate_results, p = 100, n = 200)[c("st_dev", "type", "corr", "model_name", "mean_test_mse", "sd_test_mse")]
library(tables)
Mean <- function(x) {
if(length(x) == 0) {
return(-1)
}
return(mean(x))
}
SD <- function(x) {
if(length(x) == 0) {
return(-1)
}
return(sd(x))
}
x1 <- tabular((st_dev * model_name) ~ (type * corr * (mean_test_mse + sd_test_mse)) * Mean, data = sub_results)
x1
all_results <- readRDS("../../results/monte-carlo/all_results.rds")
sub_all_results <- subset_data(all_results, p = 100, n = 200)[c("st_dev", "type", "corr", "model_name", "mean_test_mse", "sd_test_mse")]
library(tables)
Mean <- function(x) {
if(length(x) == 0) {
return(-1)
}
return(mean(x))
}
SD <- function(x) {
if(length(x) == 0) {
return(-1)
}
return(sd(x))
}
x1 <- tabular((st_dev * model_name) ~ (type * corr * test_mse) * (Mean + SD), data = sub_all_results)
all_results <- readRDS("../../results/monte-carlo/all_results.rds")
sub_all_results <- subset_data(all_results, p = 100, n = 200)[c("st_dev", "type", "corr", "model_name", "mean_test_mse", "sd_test_mse")]
sub_all_results <- subset_data(all_results, p = 100, n = 200)[c("st_dev", "type", "corr", "model_name", "test_mse")]
x1 <- tabular((st_dev * model_name) ~ (type * corr * test_mse) * (Mean + SD), data = sub_all_results)
x1
x2 <- x1[x1[, 1] > 0, ]
x3 <- x2[, x2[1, ] > 0]
x3
toLaTeX(x3, file = "test2.tex")
toLatex(x3, file = "test2.tex")
toLatex(x3, file = "test2.tex")
toLatex(x3)
?toLatex
toLatex(x3, file = "test2")
toLatex(x3, file = "./test2.tex")
toLatex(x3, file = "./test.tex")
toLatex(x3, file = "t")
?table_options
?toLatex
tables::toLatex(x3, file = "t")
tables::toLatex(x3, file = "t.tex")
tables::toLatex(x3, file = t.tex)
class(x3)
tables::toLatex(x3)
View(sub_all_results)
all_results <- readRDS("../../results/monte-carlo/all_results.rds")
sub_all_results <- subset_data(all_results, p = 100, n = 200)[c("st_dev", "type", "corr", "model_name", "test_mse")]
names(sub_all_results) <- c("st\_dev", "type", "corr", "model\_name", "test\_mse")
names(sub_all_results) <- c("st\\_dev", "type", "corr", "model\\_name", "test\\_mse")
x1 <- tabular((st_dev * model\\_name) ~ (type * corr * test\\_mse) * (Mean + SD), data = sub_all_results)
all_results <- readRDS("../../results/monte-carlo/all_results.rds")
all_results$model_name <- mapvalues(all_results$model_name,
from = old_names, to = new_names)
sub_all_results <- subset_data(all_results, p = 100, n = 200)[c("st_dev", "type", "corr", "model_name", "test_mse")]
names(sub_all_results) <- c("st.dev", "type", "corr", "model.name", "test.mse")
library(tables)
Mean <- function(x) {
if(length(x) == 0) {
return(-1)
}
return(mean(x))
}
SD <- function(x) {
if(length(x) == 0) {
return(-1)
}
return(sd(x))
}
x1 <- tabular((st_dev * model.name) ~ (type * corr * test.mse) * (Mean + SD), data = sub_all_results)
x2 <- x1[x1[, 1] > 0, ]
x3 <- x2[, x2[1, ] > 0]
toLatex(x3, file = "test2.tex")
sub_all_results <- subset_data(all_results, p = 100, n = 200)[c("st_dev", "type", "corr", "model_name", "test_mse")]
names(sub_all_results) <- c("st.dev", "type", "corr", "model.name", "test.mse")
library(tables)
Mean <- function(x) {
if(length(x) == 0) {
return(-1)
}
return(mean(x))
}
SD <- function(x) {
if(length(x) == 0) {
return(-1)
}
return(sd(x))
}
x1 <- tabular((st_dev * model.name) ~ (type * corr * test.mse) * (Mean + SD), data = sub_all_results)
x2 <- x1[x1[, 1] > 0, ]
x3 <- x2[, x2[1, ] > 0]
toLatex(x3, options = list(justification = "l"))
x4 <- round(x3, 3)
?round
x4 <- round(x3, digits = 3)
SD <- function(x) {
if(length(x) == 0) {
return(-1)
}
return(round(sd(x), 3))
}
Mean <- function(x) {
if(length(x) == 0) {
return(-1)
}
return(round(mean(x), 3))
}
all_results <- readRDS("../../results/monte-carlo/all_results.rds")
all_results$model_name <- mapvalues(all_results$model_name,
from = old_names, to = new_names)
sub_all_results <- subset_data(all_results, p = 100, n = 200)[c("st_dev", "type", "corr", "model_name", "test_mse")]
names(sub_all_results) <- c("st.dev", "type", "corr", "model.name", "test.mse")
library(tables)
Mean <- function(x) {
if(length(x) == 0) {
return(-1)
}
return(round(mean(x), 3))
}
SD <- function(x) {
if(length(x) == 0) {
return(-1)
}
return(round(sd(x), 3))
}
x1 <- tabular((st_dev * model.name) ~ (type * corr * test.mse) * (Mean + SD), data = sub_all_results)
x2 <- x1[x1[, 1] > 0, ]
x3 <- x2[, x2[1, ] > 0]
x1 <- tabular((st.dev * model.name) ~ (type * corr * test.mse) * (Mean + SD), data = sub_all_results)
x2 <- x1[x1[, 1] > 0, ]
x3 <- x2[, x2[1, ] > 0]
toLatex(x3, options = list(justification = "l"))
all_results$model_name <- mapvalues(all_results$model_name,
from = old_names, to = new_names)
old_names <- c("fm", "ab", "bb", "asb", "bsb", "af", "bf", "asf",
"bsf", "ridge", "lasso", "enet", "adap_ridge",
"adap_lasso", "adap_enet", "scad", "mcp", "gbm",
"rf", "svm")
new_names <- c("OLS", "AIC back.", "BIC back.", "AIC step. back.",
"BIC step. back.", "AIC for.", "BIC for.",
"AIC step. for.", "BIC step. for.", "Ridge", "Lasso",
"E-net", "Adap. ridge", "Adap. lasso", "Adap e-net",
"SCAD", "MCP", "GB", "RF", "SVM")
all_results$model_name <- mapvalues(all_results$model_name,
from = old_names, to = new_names)
all_results <- readRDS("../../results/monte-carlo/all_results.rds")
all_results$model_name <- mapvalues(all_results$model_name,
from = old_names, to = new_names)
sub_all_results <- subset_data(all_results, p = 100, n = 200)[c("st_dev", "type", "corr", "model_name", "test_mse")]
names(sub_all_results) <- c("st.dev", "type", "corr", "model.name", "test.mse")
library(tables)
Mean <- function(x) {
if(length(x) == 0) {
return(-1)
}
return(round(mean(x), 3))
}
SD <- function(x) {
if(length(x) == 0) {
return(-1)
}
return(round(sd(x), 3))
}
x1 <- tabular((st.dev * model.name) ~ (type * corr * test.mse) * (Mean + SD), data = sub_all_results)
x2 <- x1[x1[, 1] > 0, ]
x3 <- x2[, x2[1, ] > 0]
toLatex(x3, options = list(justification = "l"))
# This function takes in a data frame and a list of keyword arguments (...).
# This function then returns a subset of this dataframe that only contains rows
# where all the keyword arguments are satisfied. For example, if one calls
# subset_data(df, x = 3), then this function returns the rows of df such that
# df$x == 3.
subset_data <- function(data, ...) {
args <- list(...)
for (fixed_parameter in names(args)) {
data <- data[data[[fixed_parameter]] == args[[fixed_parameter]], ]
}
return(data)
}
source('~/github/reu-2021/code/figures/test-plots.r', echo=TRUE)
source('~/github/reu-2021/code/figures/test-plots.r', echo=TRUE)

axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)
)
plot_metric_2 <- function(data, metric, facet, color, ...) {
args <- list(...)
mean_metric <- paste("mean_", metric, sep = "")
sd_metric <- paste("sd_", metric, sep = "")
for (fixed_parameter in names(args)) {
data <- data[data[[fixed_parameter]] == args[[fixed_parameter]], ]
}
ggplot(data = data) +
geom_point(mapping = aes_string(x = "model_name", y = mean_metric, color = color), size = 2, alpha = 1, shape = 4) +
# geom_errorbar(mapping = aes_string(x = "model_name", y = mean_metric, ymin = paste(mean_metric, "-", sd_metric), ymax = paste(mean_metric, "+", sd_metric))) +
facet_grid(reformulate(facet[1], facet[2]), scales = "free_y") +
theme(
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)
)
}
plot_metric_2(aggregate_results, "test_mse", facet = c("type", "st_dev"), color = "corr", p = 100, n = 200)
plot_metric_2 <- function(data, metric, facet, color, ...) {
args <- list(...)
mean_metric <- paste("mean_", metric, sep = "")
sd_metric <- paste("sd_", metric, sep = "")
for (fixed_parameter in names(args)) {
data <- data[data[[fixed_parameter]] == args[[fixed_parameter]], ]
}
ggplot(data = data) +
geom_point(mapping = aes_string(x = "model_name", y = mean_metric, color = color), size = 2, shape = 4) +
# geom_errorbar(mapping = aes_string(x = "model_name", y = mean_metric, ymin = paste(mean_metric, "-", sd_metric), ymax = paste(mean_metric, "+", sd_metric))) +
facet_grid(reformulate(facet[1], facet[2]), scales = "free_y") +
theme(
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)
)
}
plot_metric_2(aggregate_results, "test_mse", facet = c("type", "st_dev"), color = "corr", p = 100, n = 200)
source('~/github/reu-2021/code/figures/test-plots.r', echo=TRUE)
source('~/github/reu-2021/code/figures/test-plots.r', echo=TRUE)
source('~/github/reu-2021/code/figures/test-plots.r', echo=TRUE)
source('~/github/reu-2021/code/figures/test-plots.r', echo=TRUE)
source('~/github/reu-2021/code/figures/test-plots.r', echo=TRUE)
source('~/github/reu-2021/code/figures/test-plots.r', echo=TRUE)
source('~/github/reu-2021/code/figures/test-plots.r', echo=TRUE)
source('~/github/reu-2021/code/figures/test-plots.r', echo=TRUE)
source('~/github/reu-2021/code/figures/test-plots.r', echo=TRUE)
source('~/github/reu-2021/code/figures/test-plots.r', echo=TRUE)
source('~/github/reu-2021/code/figures/test-plots.r', echo=TRUE)
source('~/github/reu-2021/code/figures/test-plots.r', echo=TRUE)
source('~/github/reu-2021/code/figures/test-plots.r', echo=TRUE)
plot_metric_2(aggregate_results, "test_mse", facet = c("type", "st_dev"), color = "corr", p = 100, n = 200)# + reu_border +
source('~/github/reu-2021/code/figures/test-plots.r', echo=TRUE)
plot_metric_2(aggregate_results, "test_mse", facet = c("type", "st_dev"), color = "corr", p = 100, n = 200) + reu_border +
theme(panel.grid = element_line(color = "gray"))
plot_metric_2 <- function(data, metric, facet, color, ...) {
args <- list(...)
mean_metric <- paste("mean_", metric, sep = "")
sd_metric <- paste("sd_", metric, sep = "")
for (fixed_parameter in names(args)) {
data <- data[data[[fixed_parameter]] == args[[fixed_parameter]], ]
}
plt <- ggplot(data = data) +
geom_point(mapping = aes_string(x = "model_name", y = mean_metric, color = color), size = 2) +
# geom_errorbar(mapping = aes_string(x = "model_name", y = mean_metric, ymin = paste(mean_metric, "-", sd_metric), ymax = paste(mean_metric, "+", sd_metric))) +
facet_grid(reformulate(facet[1], facet[2]), scales = "free_y") +
theme(
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)
)
return(plt)
}
plot_metric_2(aggregate_results, "test_mse", facet = c("type", "st_dev"), color = "corr", p = 100, n = 200) + reu_border +
theme(panel.grid = element_line(color = "gray"))
plot_metric_2(aggregate_results, "test_mse", facet = c("type", "st_dev"), color = "corr", p = 100, n = 200) + reu_border +
theme(panel.grid = element_line(color = "gray100"))
plot_metric_2(aggregate_results, "test_mse", facet = c("type", "st_dev"), color = "corr", p = 100, n = 200) + reu_border +
theme(panel.grid = element_line(color = "gray90"))
theme(
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA, size = 0.2),
panel.grid = element_line(color = "gray90"),
) +
labs("Model name", "Mean test MSE")
plot_metric_2(aggregate_results, "test_mse", facet = c("type", "st_dev"), color = "corr", p = 100, n = 200) +
theme(
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA, size = 0.2),
panel.grid = element_line(color = "gray90"),
) +
labs("Model name", "Mean test MSE")
plot_metric_2(aggregate_results, "test_mse", facet = c("type", "st_dev"), color = "corr", p = 100, n = 200) +
theme(
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA, size = 0.2),
panel.grid = element_line(color = "gray90"),
) +
labs(x = "Model name", y = "Mean test MSE")
plot_metric_2(aggregate_results, "test_mse", facet = c("type", "st_dev"), color = "corr", p = 100, n = 200) +
theme(
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA, size = 0.2),
panel.grid = element_line(color = "gray90"),
strip.background = element_rect(fill = "white", color = "black")
) +
labs(x = "Model name", y = "Mean test MSE")
plot_metric_2(aggregate_results, "test_mse", facet = c("type", "st_dev"), color = "corr", p = 100, n = 200) +
theme(
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA, size = 0.2),
panel.grid = element_line(color = "gray90"),
strip.background = element_rect(fill = "white", color = "white")
) +
labs(x = "Model name", y = "Mean test MSE")
plot_metric_2(aggregate_results, "test_mse", facet = c("type", "st_dev"), color = "corr", p = 100, n = 200) +
theme(
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA, size = 0.2),
panel.grid = element_line(color = "gray90"),
strip.background = element_rect(fill = "white", color = "white"),
strip.text = (x = "t", y = "tt")
) +
labs(x = "Model name", y = "Mean test MSE")
plot_metric_2(aggregate_results, "test_mse", facet = c("type", "st_dev"), color = "corr", p = 100, n = 200) +
theme(
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA, size = 0.2),
panel.grid = element_line(color = "gray90"),
strip.background = element_rect(fill = "white", color = "white"),
strip.text = element_text(x = "t", y = "tt")
) +
labs(x = "Model name", y = "Mean test MSE")
plot_metric_2(aggregate_results, "test_mse", facet = c("type", "st_dev"), color = "corr", p = 100, n = 200) +
theme(
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA, size = 0.2),
panel.grid = element_line(color = "gray90"),
strip.background = element_rect(fill = "white", color = "white"),
strip.text = element_text()
) +
labs(x = "Model name", y = "Mean test MSE")
plot_metric_2(aggregate_results, "test_mse", facet = c("type", "st_dev"), color = "corr", p = 100, n = 200) +
theme(
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA, size = 0.2),
panel.grid = element_line(color = "gray90"),
strip.background = element_blank(),
strip.text = element_text()
) +
labs(x = "Model name", y = "Mean test MSE")
plt <- ggplot(data = data) +
geom_point(mapping = aes_string(x = "model_name", y = mean_metric, color = color), size = 2, alpha = 0.8) +
# geom_errorbar(mapping = aes_string(x = "model_name", y = mean_metric, ymin = paste(mean_metric, "-", sd_metric), ymax = paste(mean_metric, "+", sd_metric))) +
facet_grid(reformulate(facet[1], facet[2]), scales = "free_y") +
theme(
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)
)
plot_metric_2 <- function(data, metric, facet, color, ...) {
args <- list(...)
mean_metric <- paste("mean_", metric, sep = "")
sd_metric <- paste("sd_", metric, sep = "")
for (fixed_parameter in names(args)) {
data <- data[data[[fixed_parameter]] == args[[fixed_parameter]], ]
}
plt <- ggplot(data = data) +
geom_point(mapping = aes_string(x = "model_name", y = mean_metric, color = color), size = 2, alpha = 0.8) +
# geom_errorbar(mapping = aes_string(x = "model_name", y = mean_metric, ymin = paste(mean_metric, "-", sd_metric), ymax = paste(mean_metric, "+", sd_metric))) +
facet_grid(reformulate(facet[1], facet[2]), scales = "free_y") +
theme(
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)
)
return(plt)
}
plot_metric_2(aggregate_results, "test_mse", facet = c("type", "st_dev"), color = "corr", p = 100, n = 200) +
theme(
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA, size = 0.2),
panel.grid = element_line(color = "gray90"),
strip.background = element_blank(),
strip.text = element_text()
) +
labs(x = "Model name", y = "Mean test MSE")
plot_metric_2 <- function(data, metric, facet, color, ...) {
args <- list(...)
mean_metric <- paste("mean_", metric, sep = "")
sd_metric <- paste("sd_", metric, sep = "")
for (fixed_parameter in names(args)) {
data <- data[data[[fixed_parameter]] == args[[fixed_parameter]], ]
}
plt <- ggplot(data = data) +
geom_point(mapping = aes_string(x = "model_name", y = mean_metric, color = color), size = 2, alpha = 0.5) +
# geom_errorbar(mapping = aes_string(x = "model_name", y = mean_metric, ymin = paste(mean_metric, "-", sd_metric), ymax = paste(mean_metric, "+", sd_metric))) +
facet_grid(reformulate(facet[1], facet[2]), scales = "free_y") +
theme(
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)
)
return(plt)
}
plot_metric_2(aggregate_results, "test_mse", facet = c("type", "st_dev"), color = "corr", p = 100, n = 200) +
theme(
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA, size = 0.2),
panel.grid = element_line(color = "gray90"),
strip.background = element_blank(),
strip.text = element_text()
) +
labs(x = "Model name", y = "Mean test MSE")
aggregate_results <- readRDS("../../results/monte-carlo/aggregate_results.rds")
r <- aggregate_results[aggregate_results$p == 100 & aggregate_results$n == 200 & aggregate_results$type == "autoregressive"]
r <- aggregate_results[aggregate_results$p == 100 & aggregate_results$n == 200 & aggregate_results$type == "autoregressive", ]
View(r)
r <- aggregate_results[aggregate_results$model_name == "svm", ]
r <- aggregate_results[aggregate_results$p == 100 & aggregate_results$n == 200 & aggregate_results$type == "autoregressive", ]
r <- r[r$model_name == "svm", ]
all_res <- readRDS("../../results/monte-carlo/all_results.rds")
View(all_res)
x <- all_res[all_res$p == 100 & all_res$n == 200 & all_res$type == "autoregressive" & all_res$model_name == "svm", ]
x_2 <- x[x$corr == 0.2, ]
x_5 <- x[x$corr == 0.5, ]
x_9 <- x[x$corr == 0.9, ]
View(x_2)
x <- all_res[all_res$p == 100 & all_res$n == 200 & all_res$type == "autoregressive" & all_res$model_name == "svm" & all_res$st_dev == 3, ]
x_2 <- x[x$corr == 0.2, ]
x_5 <- x[x$corr == 0.5, ]
x_9 <- x[x$corr == 0.9, ]
mean(x_2$test_mse)
mean(x_5$test_mse)
mean(x_9$test_mse)
res_2 <- readRDS("../../results/monte-carlo/sim_results_1000_2000_3_autoregressive_0.2.rds")
res_5 <- readRDS("../../results/monte-carlo/sim_results_1000_2000_3_autoregressive_0.5.rds")
res_9 <- readRDS("../../results/monte-carlo/sim_results_1000_2000_3_autoregressive_0.9.rds")
lapply(res_2, function(i)) {}
lapply(res_2, function(i)) {
return(i$test_mse$svm)
}
lapply(res_2, function(i)) {
return(i$test_mse$svm)
})
lapply(res_2, function(i)) {
return(i$test_mse$svm)
})
lapply(res_2, function(i) {
return(i$test_mse$svm)
})
res_2_m <- mean(lapply(res_2, function(i) {
return(i$test_mse$svm)
}))
res_2_m <- (lapply(res_2, function(i) {
return(i$test_mse$svm)
}))
View(res_2_m)
res_2_m <- mean(as.factor(lapply(res_2, function(i) {
return(i$test_mse$svm)
})))
res_2_m <- mean(as.factor(sapply(res_2, function(i) {
return(i$test_mse$svm)
})))
res_2_m <- mean(unlist(sapply(res_2, function(i) {
return(i$test_mse$svm)
})))
res_5_m <- mean(unlist(sapply(res_5, function(i) {
return(i$test_mse$svm)
})))
res_9_m <- mean(unlist(sapply(res_9, function(i) {
return(i$test_mse$svm)
})))
res_2 <- readRDS("../../results/monte-carlo/sim_results_100_200_3_autoregressive_0.2.rds")
res_2 <- readRDS("../../results/monte-carlo/sim_results_200_100_3_autoregressive_0.2.rds")
res_5 <- readRDS("../../results/monte-carlo/sim_results_200_100_3_autoregressive_0.5.rds")
res_9 <- readRDS("../../results/monte-carlo/sim_results_200_100_3_autoregressive_0.9.rds")
res_9_m <- mean(unlist(sapply(res_9, function(i) {
return(i$test_mse$svm)
})))
res_5_m <- mean(unlist(sapply(res_5, function(i) {
return(i$test_mse$svm)
})))
res_2_m <- mean(unlist(sapply(res_2, function(i) {
return(i$test_mse$svm)
})))
plot_metric_2(aggregate_results, "fn", facet = c("type", "st_dev"), color = "corr", p = 100, n = 200) +
theme(
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA, size = 0.2),
panel.grid = element_line(color = "gray90"),
strip.background = element_blank(),
strip.text = element_text()
) +
labs(x = "Model name", y = "Mean test MSE")
plot_metric_2(aggregate_results, "train_mse", facet = c("type", "st_dev"), color = "corr", p = 100, n = 200) +
theme(
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA, size = 0.2),
panel.grid = element_line(color = "gray90"),
strip.background = element_blank(),
strip.text = element_text()
) +
labs(x = "Model name", y = "Mean test MSE")
source('~/github/reu-2021/code/figures/test-plots.r', echo=TRUE)
plot_metric_2(aggregate_results, "test_mse", facet = c("type", "st_dev"), color = "corr", p = 100, n = 200) +
theme(
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA, size = 0.2),
panel.grid = element_line(color = "gray90"),
strip.background = element_blank(),
strip.text = element_text()
) +
labs(x = "Model name", y = "Mean test MSE")
plot_metric_2(aggregate_results, "train_mse", facet = c("type", "st_dev"), color = "corr", p = 100, n = 200) +
theme(
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA, size = 0.2),
panel.grid = element_line(color = "gray90"),
strip.background = element_blank(),
strip.text = element_text()
) +
labs(x = "Model name", y = "Mean test MSE")
plot_metric_2(aggregate_results, "train_mse", facet = c("type", "st_dev"), color = "corr", p = 100, n = 200) +
theme(
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA, size = 0.2),
panel.grid = element_line(color = "gray90"),
strip.background = element_blank(),
strip.text = element_text()
) +
labs(x = "Model name", y = "Mean test MSE")
plot_metric_2(aggregate_results, "test_mse", facet = c("type", "st_dev"), color = "corr", p = 100, n = 200) +
theme(
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA, size = 0.2),
panel.grid = element_line(color = "gray90"),
strip.background = element_blank(),
strip.text = element_text()
) +
labs(x = "Model name", y = "Mean test MSE")
test_fig <- plot_metric_2(aggregate_results, "test_mse", facet = c("type", "st_dev"), color = "corr", p = 100, n = 200) +
theme(
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA, size = 0.2),
panel.grid = element_line(color = "gray90"),
strip.background = element_blank(),
strip.text = element_text()
) +
labs(x = "Model name", y = "Mean test MSE")
ggsave(
filename = "facet.png",
path = "./images",
plot = test_fig,
type = "cairo-png",
width = 10,
height = 6,
unit = "in"
)
source('~/github/reu-2021/code/figures/test-plots.r', echo=TRUE)
source('~/github/reu-2021/code/figures/test-plots.r', echo=TRUE)
plot_metric_2 <- function(data, metric, facet, color, ...) {
args <- list(...)
mean_metric <- paste("mean_", metric, sep = "")
sd_metric <- paste("sd_", metric, sep = "")
for (fixed_parameter in names(args)) {
data <- data[data[[fixed_parameter]] == args[[fixed_parameter]], ]
}
plt <- ggplot(data = data) +
geom_point(mapping = aes_string(x = "model_name", y = mean_metric, color = color), size = 2, alpha = 0.5) +
# geom_errorbar(mapping = aes_string(x = "model_name", y = mean_metric, ymin = paste(mean_metric, "-", sd_metric), ymax = paste(mean_metric, "+", sd_metric))) +
facet_grid(reformulate(facet[1], facet[2]), scales = "free_y") +
theme(
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)
)
print(data)
return(plt)
}
test_fig <- plot_metric_2(aggregate_results, "test_mse", facet = c("type", "st_dev"), color = "corr", p = 100, n = 200) +
theme(
panel.background = element_rect(fill = "white"),
panel.border = element_rect(color = "black", fill = NA, size = 0.2),
panel.grid = element_line(color = "gray90"),
strip.background = element_blank(),
strip.text = element_text()
) +
labs(x = "Model name", y = "Mean test MSE")
source('~/github/reu-2021/code/figures/test-plots.r', echo=TRUE)
?ftable
sub_results <- subset_data(data, p = 100, n = 200)
View(sub_results)
sub_results <- subset_data(data, p = 100, n = 200)
?subset_data
source('~/github/reu-2021/code/figures/test-plots.r', echo=TRUE)
source('~/github/reu-2021/code/figures/test-plots.r', echo=TRUE)
sub_results <- subset_data(aggregate_results, p = 100, n = 200)
View(sub_results)
View(sub_results)
sub_results <- subset_data(aggregate_results, p = 100, n = 200)[c("n", "p", "st_dev", "type", "corr", "model_name", "mean_test_mse")]
View(sub_results)
sub_results <- subset_data(aggregate_results, p = 100, n = 200)[c("st_dev", "type", "corr", "model_name", "mean_test_mse")]
t <- ftable(sub_results, row.vars = c("st_dev", "model_name"), col.vars = c("type", "corr"))
t
?ftable
xtabs(~ type + corr, data = sub_results)
xtabs(~ type + corr + model_name, data = sub_results)
xtabs(mean_test_mse ~ type + corr + model_name, data = sub_results)
xtabs(mean_test_mse ~ type + corr + model_name, data = sub_results)
t <- ftable(xtabs(mean_test_mse ~ type + corr + model_name, data = sub_results))
t
t <- ftable(xtabs(mean_test_mse ~ type + corr + model_name + st_dev, data = sub_results), row.vars = c("st_dev", "model_name"), col.vars = c("type", "corr"))
t
t <- ftable(ta, row.vars = c("st_dev", "model_name"), col.vars = c("type", "corr"))
ta <- xtabs(mean_test_mse ~ type + corr + model_name + st_dev, data = sub_results)
t <- ftable(ta, row.vars = c("st_dev", "model_name"), col.vars = c("type", "corr"))
ta
ta <- xtabs(mean_test_mse ~ model_name + corr + type + st_dev, data = sub_results)
ta
ta[, 1, ,]
ta[1, 1, 1, 1]
ta[1, 1, 1, ]
ta[1, 1, , 1]
ta[1, , 1, 1]
ta[, 1, 1, 1]
ta[["OLS", "0.2", "independent", "1"]]
ta[["OLS"]][[0.2]][["independent"]][[1]]
ta[["OLS"]]
names(ta)
ta
t2 <- xtabs(mean_test_mse ~ model_name + corr, data = sub_results)
t2
t2["OLS", ]
ta["OLS", ]
ta["OLS", , ,]
ta["OLS", 0.2, "independent", 1]
ta["OLS", 0.2, "independent", ]
ta["OLS", 0.2, , ]
ta["OLS", , , ]
ta["OLS", "0.2", , ]
ta["OLS", "0.2", "independent", ]
ta["OLS", "0.2", "independent", "1"]
t2
t2["AIC back.", ] <- NULL
t3 <- t2[2: nrow(t2), ]
t3
t2[, corr] <- t2[2: nrow(t2), corr]
t2[, 1] <- t2[2: nrow(t2), 1]
t <- ftable(ta, row.vars = c("st_dev", "model_name"), col.vars = c("type", "corr"))
t
t["1", "SVM"]
t <- ftable(ta, row.vars = c("st_dev", "model_name"), col.vars = c("type", "corr"), exclude = 0)
t
ta[, "0.2", , "1"]
ta[, "0.2", , "1"][2:4]
ta[, "0.2", , "1"][, 2:4]
ta[, "0.2", , "1"] <- ta[, "0.2", , "1"][, 2:4]
install.packages("tables")
library(table)
library(tables)
t <- tabular(st_dev * model_name ~ type * corr, data = sub_results)
t
View(t)
t <- tabular(st_dev * model_name ~ (type * corr) * sum, data = sub_results)
t
t <- tabular(st_dev * model_name ~ (type * corr) * mean, data = sub_results)
t
t <- tabular(st_dev * model_name ~ type * corr * mean_train_mse, data = sub_results)
t <- tabular(st_dev * model_name ~ type * corr * mean_test_mse, data = sub_results)
View(sub_results)
all_results <- readRDS("../../results/monte-carlo/all_results.rds")
sub_all_results <- subset_data(all_results, p = 100, n = 200)[c("st_dev", "type", "corr", "model_name", "mean_test_mse")]
View(all_results)
sub_all_results <- subset_data(all_results, p = 100, n = 200)[c("st_dev", "type", "corr", "model_name", "train_mse")]
t <- tabular(st_dev * model_name ~ type * corr * test_mse, data = sub_results)
t <- tabular(st_dev * model_name ~ type * corr * test_mse, data = sub_all_results)
View(sub_all_results)
sub_all_results <- subset_data(all_results, p = 100, n = 200)[c("st_dev", "type", "corr", "model_name", "test_mse")]
t <- tabular(st_dev * model_name ~ type * corr * test_mse, data = sub_all_results)
t <- tabular((st_dev * model_name) ~ (type * corr), data = sub_all_results)
View(all_results)
t <- tabular((st_dev * model_name) ~ (type * corr), data = sub_results)
View(t)
t
library(dplyr)
all_results %>% group_by(st_dev, corr, type, model_name) %>% summarize(mean_test_mse = mean(test_mse))
t <- all_results %>% group_by(st_dev, corr, type, model_name) %>% summarize(mean_test_mse = mean(test_mse))
View(t)
t <- tabular((st_dev * model_name) ~ (type * corr * test_mse), data = all_sub_results)
t <- tabular((st_dev * model_name) ~ (type * corr * test_mse), data = sub_all_results)
View(t)
ftable(t, row.vars = c("st_dev", "model_name"), col.vars = c("type", "corr"))
ta <- xtabs(mean_test_mse ~ model_name + corr + type + st_dev, data = sub_results)
t <- ftable(ta, row.vars = c("st_dev", "model_name"), col.vars = c("type", "corr"))
t
t <- all_results %>% group_by(st_dev, corr, type, model_name) %>% summarize(mean_test_mse = mean(test_mse))
View(t)
install.packages("reshape")
library(reshape)
xx <- melt(t)
View(t)
x <- melt(t)
t <- all_results %>% group_by(st_dev, corr, type, model_name) %>% summarize(mean_test_mse = mean(test_mse))
x <- melt(t)
x <- melt(as.data.frame(t))
class(t)
dcast(x, type + corr ~ st_dev + model_name)
cast(x, type + corr ~ st_dev + model_name)
View(x)
?melt
View(x)
cast(x, type + corr ~ variable + value)
View(x)
View(sub_results)
# all_results <- readRDS("../../results/monte-carlo/all_results.rds")
# t <- all_results %>% group_by(st_dev, corr, type, model_name) %>% summarize(mean_test_mse = mean(test_mse))
x <- melt(sub_results)
View(x)
# all_results <- readRDS("../../results/monte-carlo/all_results.rds")
# t <- all_results %>% group_by(st_dev, corr, type, model_name) %>% summarize(mean_test_mse = mean(test_mse))
x <- melt(sub_results, id = c("type", "corr", "model_name", "st_dev"), measured = "test_mse")
y <- cast(x, type + corr ~ st_dev + model_name)
View(y)
y <- cast(x, st_dev + model_name ~ type + corr)
View(y)

install.packages(tidyverse, dplyr, faux)
install.packages(c("tidyverse", "dplyr", "faux")
)
install.packages("ncvreg", "glmnet", "gcdnet", "MASS", "caret")
install.packages(c("ncvreg", "glmnet", "gcdnet", "MASS", "caret"))
install.packages(c("xgboost", "ranger", "e1071", "parallel"))
library(tidyverse)
require(devtools)
install.packages("devtools")
require(devtools)
install_version("dplyr", version = "1.0.6")
install_version("dplyr", version = "1.0.6")
detach("package:dplyr", unload = TRUE)
remove.packages("dplyr", lib="~/R/win-library/4.1")
install_version("dplyr", version = "1.0.6")
install_version("dplyr", version = "1.0.6", repos = "https://cran.r-project.org/src/contrib/Archive/dplyr/dplyr_1.0.6.tar.gz")
install_version("dplyr", version = "1.0.6", repos = "https://cran.r-project.org/")
install_url("https://cran.r-project.org/src/contrib/Archive/dplyr/dplyr_1.0.6.tar.gz")
install_url("http://cran.r-project.org/src/contrib/Archive/dplyr/dplyr_1.0.6.tar.gz")
source("~/GitHub/reu-2021/code/monte-carlo/run-simulations.r", echo=TRUE)
monte_carlo(n = 50, p = 10, response = 1, iterations = 1, num_cores = 1)
source("~/GitHub/reu-2021/code/monte-carlo/run-simulations.r", echo=TRUE)
monte_carlo(n = 50, p = 10, response = 1, iterations = 1, num_cores = 1)
source("~/GitHub/reu-2021/code/monte-carlo/run-simulations.r", echo=TRUE)
monte_carlo(n = 50, p = 10, response = 1, iterations = 1, num_cores = 1)
source("~/GitHub/reu-2021/code/monte-carlo/run-simulations.r", echo=TRUE)
monte_carlo(n = 50, p = 10, response = 1, iterations = 1, num_cores = 1)
predicted_variables
true_variables
source("~/GitHub/reu-2021/code/monte-carlo/run-simulations.r", echo=TRUE)
monte_carlo(n = 50, p = 10, response = 1, iterations = 1, num_cores = 1)
source("~/GitHub/reu-2021/code/monte-carlo/run-simulations.r", echo=TRUE)
r <- monte_carlo(n = 50, p = 10, response = 1, iterations = 1, num_cores = 1)
View(r)
source("~/GitHub/reu-2021/code/monte-carlo/run-simulations.r", echo=TRUE)
source("~/GitHub/reu-2021/code/monte-carlo/run-simulations.r", echo=TRUE)
r <- run_simulations(n = 50, p = 10, response = 1, iterations = 1, num_cores = 1)
r <- run_simulations(n = 50, p = 10, indices = 1, response = 1, iterations = 1, num_cores = 1)
r <- monte_carlo(n = 50, p = 10, response = 1, iterations = 1, num_cores = 1)
source("~/GitHub/reu-2021/code/monte-carlo/run-simulations.r", echo=TRUE)
r <- monte_carlo(n = 50, p = 10, response = 1, iterations = 1, num_cores = 1)
r <- run_simulations(n = 50, p = 10, response = 1, iterations = 1, num_cores = 1)
r <- run_simulations(indices = 1, response = 1, iterations = 1, num_cores = 1)
source("~/GitHub/reu-2021/code/monte-carlo/run-simulations.r", echo=TRUE)
r <- run_simulations(indices = 1, response = 1, iterations = 1, num_cores = 1)
r <- run_simulations(indices = 1, response = 1, iterations = 1, num_cores = 1)
View(r)
r <- run_simulations(indices = 1, response = 1, iterations = 10)
View(r)
View(r[[1]][[1]][["coefficients"]])
View(r[[1]][[2]][["coefficients"]])
source("~/GitHub/reu-2021/code/monte-carlo/run-simulations.r", echo=TRUE)
r <- monte_carlo(n = 50, p = 10, response = 2, iterations = 1, num_cores = 1)
source("~/GitHub/reu-2021/code/monte-carlo/run-simulations.r", echo=TRUE)
r <- monte_carlo(n = 50, p = 10, response = 2, iterations = 1, num_cores = 1)
View(d)
+ 2 * ifelse(x[,8] > 0.5 & x[,9] > 0.5, 1, 0)
View(d)
+ 2 * ifelse(x[,9] > 0.5 & x[,10] > 0.5, 1, 0)
+ 2 * ifelse(d[,9] > 0.5 & d[,10] > 0.5, 1, 0)
d$yhat <- ifelse(d[,3] > 0.5, 1, 0) + exp(d[,4]) + beta[6]*d[,7] + d[,8]^3 +
2 * ifelse(d[,9] > 0.5 & d[,10] > 0.5, 1, 0)
+ 2 * ifelse(d[,9] > 0.5 & d[,10] > 0.5, 1, 0)
d$yhat <- ifelse(d[,3] > 0.5, 1, 0) + exp(d[,4]) + beta[6]*d[,7] + d[,8]^3 + 2 * ifelse(
d[,9] > 0.5 & d[,10] > 0.5, 1, 0)
d$yhat <- ifelse(d[,3] > 0.5, 1, 0) + exp(d[,4]) + 0.5*d[,7] + d[,8]^3 + 2 * ifelse(
d[,9] > 0.5 & d[,10] > 0.5, 1, 0)
View(d)
source("~/GitHub/reu-2021/code/monte-carlo/run-simulations.r", echo=TRUE)
View(d)
source("~/GitHub/reu-2021/code/monte-carlo/run-simulations.r", echo=TRUE)
source("~/GitHub/reu-2021/code/monte-carlo/run-simulations.r", echo=TRUE)
View(d)
source("~/GitHub/reu-2021/code/monte-carlo/run-simulations.r", echo=TRUE)
d$yhat2 <- ifelse(d[,2] > 0.5, 1, 0) + exp(d[,3]) + beta[6]*d[,6] + d[,7]^3 + 2 * ifelse(
d[,8] > 0.5 & d[,9] > 0.5, 1, 0)
d$yhat2 <- ifelse(d[,2] > 0.5, 1, 0) + exp(d[,3]) + 0.5*d[,6] + d[,7]^3 + 2 * ifelse(
d[,8] > 0.5 & d[,9] > 0.5, 1, 0)
View(d)
View(r)
View(r[[1]][["coefficients"]])
source("~/GitHub/reu-2021/code/monte-carlo/run-simulations.r", echo=TRUE)
View(r)
View(d)
r <- monte_carlo(n = 500, p = 10, response = 2, iterations = 1)
source("~/GitHub/reu-2021/code/monte-carlo/run-simulations.r", echo=TRUE)
source("~/GitHub/reu-2021/code/monte-carlo/run-simulations.r", echo=TRUE)
View(r)
r <- monte_carlo(n = 50, p = 10, response = 2, iterations = 10)
View(r)
r <- monte_carlo(n = 30, p = 100, response = 2, iterations = 10)
View(r)
View(r)
source("~/GitHub/reu-2021/code/monte-carlo/run-simulations.r", echo=TRUE)
source("~/GitHub/reu-2021/code/monte-carlo/run-simulations.r", echo=TRUE)
View(r)
View(r[[1]][["coefficients"]])
View(r)
source("~/GitHub/reu-2021/code/monte-carlo/simulation-functions.r", echo=TRUE)
source("~/GitHub/reu-2021/code/monte-carlo/run-simulations.r", echo=TRUE)
View(r)
r <- monte_carlo(n = 30, p = 100, response = 1, iterations = 10)
View(r)
r <- monte_carlo(n = 30, p = 100, response = 2, iterations = 10)
View(r)
# perform-simulations.r
# Gabe Ackall, Connor Shrader
# This file contains run_simulations(), a function that we used to perform
# Monte Carlo simulations using the functions contained in metrics.r
# and simulation.r.
rm(list = ls())
# Used to set current working directory to the location of this file.
library(rstudioapi) # v0.13
x <- readRDS("../../results/monte-carlo/sim_results_1000_2000_1_independent_0.rds")
View(x)

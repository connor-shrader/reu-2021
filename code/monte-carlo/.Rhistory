}
apply(X = parameters, MARGIN = 1, FUN = run_simulations)
source('~/github/reu-2021/code/monte-carlo/simulation.r', echo=TRUE)
n <- c(20)
p <- c(50)
sigma <- c(1)
covar <- c("independent", "symmetric")
rho <- c(0.2, 0.5)
parameters <- expand.grid(n, p, sigma, covar, rho)
colnames(parameters) <- c("n", "p", "sigma", "covar", "rho")
# Delete extraneous rows caused by having covar = "independent." For
# rows with covar = "independent", set their rho to 0 (this is optional).
parameters <- parameters[!(parameters$covar == "independent" & parameters$rho != 0.2), ]
parameters$rho <- ifelse(parameters$covar == "independent",
0,
parameters$rho)
# Not needed
# parameters2[parameters$covar == "independent" & parameters$rho != 0.2]$rho <- 0
run_simulations <- function(row) {
print(row)
iterations <- 5
n <- as.numeric(row["n"])
p <- as.numeric(row["p"])
error_var <- as.numeric(row["sigma"])^2
type <- row["covar"]
corr <- as.numeric(row["rho"])
results <- monte_carlo(n = n,
p = p,
iterations = iterations,
error_var = error_var,
type = type,
corr = corr)
save(results, file = paste("../../data/simulations/sim_results_", n, "_", p, "_", error_var, "_", type, "_", corr, ".Rdata", sep = ""))
}
apply(X = parameters, MARGIN = 1, FUN = run_simulations)
source('~/github/reu-2021/code/monte-carlo/simulation.r', echo=TRUE)
dat <- monte_carlo(n = 100,
p = 10,
iterations = 5,
beta = c(1, 2, -2, 0, 0, 3, 0.5),
error_var = 1
)
source('~/github/reu-2021/code/monte-carlo/simulation.r', echo=TRUE)
dat <- monte_carlo(n = 100,
p = 10,
iterations = 5,
beta = c(1, 2, -2, 0, 0, 3, 0.5),
error_var = 1
)
source('~/github/reu-2021/code/monte-carlo/metrics.r', echo=TRUE)
dat <- monte_carlo(n = 100,
p = 10,
iterations = 5,
beta = c(1, 2, -2, 0, 0, 3, 0.5),
error_var = 1
)
library(caret)
dat <- monte_carlo(n = 100,
p = 10,
iterations = 5,
beta = c(1, 2, -2, 0, 0, 3, 0.5),
error_var = 1
)
View(dat)
View(dat[[1]][["coefficients"]])
n <- c(20)
p <- c(10)
sigma <- c(1)
covar <- c("independent", "symmetric")
rho <- c(0.2, 0.5)
parameters <- expand.grid(n, p, sigma, covar, rho)
colnames(parameters) <- c("n", "p", "sigma", "covar", "rho")
# Delete extraneous rows caused by having covar = "independent." For
# rows with covar = "independent", set their rho to 0 (this is optional).
parameters <- parameters[!(parameters$covar == "independent" & parameters$rho != 0.2), ]
parameters$rho <- ifelse(parameters$covar == "independent",
0,
parameters$rho)
# Not needed
# parameters2[parameters$covar == "independent" & parameters$rho != 0.2]$rho <- 0
run_simulations <- function(row) {
print(row)
iterations <- 5
n <- as.numeric(row["n"])
p <- as.numeric(row["p"])
error_var <- as.numeric(row["sigma"])^2
type <- row["covar"]
corr <- as.numeric(row["rho"])
results <- monte_carlo(n = n,
p = p,
iterations = iterations,
error_var = error_var,
type = type,
corr = corr)
save(results, file = paste("../../data/simulations/sim_results_", n, "_", p, "_", error_var, "_", type, "_", corr, ".Rdata", sep = ""))
}
apply(X = parameters, MARGIN = 1, FUN = run_simulations)
n <- c(20)
p <- c(10)
sigma <- c(1)
covar <- c("independent", "symmetric")
rho <- c(0.2, 0.5)
parameters <- expand.grid(n, p, sigma, covar, rho)
colnames(parameters) <- c("n", "p", "sigma", "covar", "rho")
# Delete extraneous rows caused by having covar = "independent." For
# rows with covar = "independent", set their rho to 0 (this is optional).
parameters <- parameters[!(parameters$covar == "independent" & parameters$rho != 0.2), ]
parameters$rho <- ifelse(parameters$covar == "independent",
0,
parameters$rho)
# Not needed
# parameters2[parameters$covar == "independent" & parameters$rho != 0.2]$rho <- 0
run_simulations <- function(row) {
print(row)
iterations <- 5
n <- as.numeric(row["n"])
p <- as.numeric(row["p"])
error_var <- as.numeric(row["sigma"])^2
type <- row["covar"]
corr <- as.numeric(row["rho"])
results <- monte_carlo(n = n,
p = p,
iterations = iterations,
error_var = error_var,
type = type,
corr = corr)
save(results, file = paste("../../data/simulations/sim_results_", n, "_", p, "_", error_var, "_", type, "_", corr, ".Rdata", sep = ""))
}
apply(X = parameters, MARGIN = 1, FUN = run_simulations)
n <- c(20)
p <- c(10)
sigma <- c(1)
covar <- c("independent", "symmetric")
rho <- c(0.2, 0.5)
parameters <- expand.grid(n, p, sigma, covar, rho)
colnames(parameters) <- c("n", "p", "sigma", "covar", "rho")
# Delete extraneous rows caused by having covar = "independent." For
# rows with covar = "independent", set their rho to 0 (this is optional).
parameters <- parameters[!(parameters$covar == "independent" & parameters$rho != 0.2), ]
parameters$rho <- ifelse(parameters$covar == "independent",
0,
parameters$rho)
# Not needed
# parameters2[parameters$covar == "independent" & parameters$rho != 0.2]$rho <- 0
run_simulations <- function(row) {
print(row)
iterations <- 5
n <- as.numeric(row["n"])
p <- as.numeric(row["p"])
error_var <- as.numeric(row["sigma"])^2
type <- row["covar"]
corr <- as.numeric(row["rho"])
results <- monte_carlo(n = n,
p = p,
iterations = iterations,
error_var = error_var,
type = type,
corr = corr)
save(results, file = paste("../../data/simulations/sim_results_", n, "_", p, "_", error_var, "_", type, "_", corr, ".Rdata", sep = ""))
}
apply(X = parameters, MARGIN = 1, FUN = run_simulations)
n <- c(20)
p <- c(10)
sigma <- c(1)
covar <- c("independent", "symmetric")
rho <- c(0.2, 0.5)
parameters <- expand.grid(n, p, sigma, covar, rho)
colnames(parameters) <- c("n", "p", "sigma", "covar", "rho")
# Delete extraneous rows caused by having covar = "independent." For
# rows with covar = "independent", set their rho to 0 (this is optional).
parameters <- parameters[!(parameters$covar == "independent" & parameters$rho != 0.2), ]
parameters$rho <- ifelse(parameters$covar == "independent",
0,
parameters$rho)
# Not needed
# parameters2[parameters$covar == "independent" & parameters$rho != 0.2]$rho <- 0
run_simulations <- function(row) {
print(row)
iterations <- 5
n <- as.numeric(row["n"])
p <- as.numeric(row["p"])
error_var <- as.numeric(row["sigma"])^2
type <- row["covar"]
corr <- as.numeric(row["rho"])
results <- monte_carlo(n = n,
p = p,
iterations = iterations,
error_var = error_var,
type = type,
corr = corr)
save(results, file = paste("../../data/simulations/sim_results_", n, "_", p, "_", error_var, "_", type, "_", corr, ".Rdata", sep = ""))
}
apply(X = parameters, MARGIN = 1, FUN = run_simulations)
n <- c(20)
p <- c(10)
sigma <- c(1)
covar <- c("independent", "symmetric")
rho <- c(0.2, 0.5)
parameters <- expand.grid(n, p, sigma, covar, rho)
colnames(parameters) <- c("n", "p", "sigma", "covar", "rho")
# Delete extraneous rows caused by having covar = "independent." For
# rows with covar = "independent", set their rho to 0 (this is optional).
parameters <- parameters[!(parameters$covar == "independent" & parameters$rho != 0.2), ]
parameters$rho <- ifelse(parameters$covar == "independent",
0,
parameters$rho)
# Not needed
# parameters2[parameters$covar == "independent" & parameters$rho != 0.2]$rho <- 0
run_simulations <- function(row) {
print(row)
iterations <- 5
n <- as.numeric(row["n"])
p <- as.numeric(row["p"])
error_var <- as.numeric(row["sigma"])^2
type <- row["covar"]
corr <- as.numeric(row["rho"])
results <- monte_carlo(n = n,
p = p,
iterations = iterations,
error_var = error_var,
type = type,
corr = corr)
save(results, file = paste("../../data/simulations/sim_results_", n, "_", p, "_", error_var, "_", type, "_", corr, ".Rdata", sep = ""))
}
apply(X = parameters, MARGIN = 1, FUN = run_simulations)
n <- c(20)
p <- c(10)
sigma <- c(1)
covar <- c("independent", "symmetric")
rho <- c(0.2, 0.5)
parameters <- expand.grid(n, p, sigma, covar, rho)
colnames(parameters) <- c("n", "p", "sigma", "covar", "rho")
# Delete extraneous rows caused by having covar = "independent." For
# rows with covar = "independent", set their rho to 0 (this is optional).
parameters <- parameters[!(parameters$covar == "independent" & parameters$rho != 0.2), ]
parameters$rho <- ifelse(parameters$covar == "independent",
0,
parameters$rho)
# Not needed
# parameters2[parameters$covar == "independent" & parameters$rho != 0.2]$rho <- 0
run_simulations <- function(row) {
print(row)
iterations <- 5
n <- as.numeric(row["n"])
p <- as.numeric(row["p"])
error_var <- as.numeric(row["sigma"])^2
type <- row["covar"]
corr <- as.numeric(row["rho"])
results <- monte_carlo(n = n,
p = p,
iterations = iterations,
error_var = error_var,
type = type,
corr = corr)
save(results, file = paste("../../data/simulations/sim_results_", n, "_", p, "_", error_var, "_", type, "_", corr, ".Rdata", sep = ""))
}
apply(X = parameters, MARGIN = 1, FUN = run_simulations)
n <- c(20)
p <- c(11)
sigma <- c(1)
covar <- c("independent", "symmetric")
rho <- c(0.2, 0.5)
parameters <- expand.grid(n, p, sigma, covar, rho)
colnames(parameters) <- c("n", "p", "sigma", "covar", "rho")
# Delete extraneous rows caused by having covar = "independent." For
# rows with covar = "independent", set their rho to 0 (this is optional).
parameters <- parameters[!(parameters$covar == "independent" & parameters$rho != 0.2), ]
parameters$rho <- ifelse(parameters$covar == "independent",
0,
parameters$rho)
# Not needed
# parameters2[parameters$covar == "independent" & parameters$rho != 0.2]$rho <- 0
run_simulations <- function(row) {
print(row)
iterations <- 5
n <- as.numeric(row["n"])
p <- as.numeric(row["p"])
error_var <- as.numeric(row["sigma"])^2
type <- row["covar"]
corr <- as.numeric(row["rho"])
results <- monte_carlo(n = n,
p = p,
iterations = iterations,
error_var = error_var,
type = type,
corr = corr)
save(results, file = paste("../../data/simulations/sim_results_", n, "_", p, "_", error_var, "_", type, "_", corr, ".Rdata", sep = ""))
}
apply(X = parameters, MARGIN = 1, FUN = run_simulations)
source('~/github/reu-2021/code/monte-carlo/simulation.r', echo=TRUE)
n <- c(20)
p <- c(10)
sigma <- c(1)
covar <- c("independent", "symmetric")
rho <- c(0.2, 0.5)
parameters <- expand.grid(n, p, sigma, covar, rho)
colnames(parameters) <- c("n", "p", "sigma", "covar", "rho")
# Delete extraneous rows caused by having covar = "independent." For
# rows with covar = "independent", set their rho to 0 (this is optional).
parameters <- parameters[!(parameters$covar == "independent" & parameters$rho != 0.2), ]
parameters$rho <- ifelse(parameters$covar == "independent",
0,
parameters$rho)
# Not needed
# parameters2[parameters$covar == "independent" & parameters$rho != 0.2]$rho <- 0
run_simulations <- function(row) {
print(row)
iterations <- 5
n <- as.numeric(row["n"])
p <- as.numeric(row["p"])
error_var <- as.numeric(row["sigma"])^2
type <- row["covar"]
corr <- as.numeric(row["rho"])
results <- monte_carlo(n = n,
p = p,
iterations = iterations,
error_var = error_var,
type = type,
corr = corr)
save(results, file = paste("../../data/simulations/sim_results_", n, "_", p, "_", error_var, "_", type, "_", corr, ".Rdata", sep = ""))
}
apply(X = parameters, MARGIN = 1, FUN = run_simulations)
n <- c(20)
p <- c(9)
sigma <- c(1)
covar <- c("independent", "symmetric")
rho <- c(0.2, 0.5)
parameters <- expand.grid(n, p, sigma, covar, rho)
colnames(parameters) <- c("n", "p", "sigma", "covar", "rho")
# Delete extraneous rows caused by having covar = "independent." For
# rows with covar = "independent", set their rho to 0 (this is optional).
parameters <- parameters[!(parameters$covar == "independent" & parameters$rho != 0.2), ]
parameters$rho <- ifelse(parameters$covar == "independent",
0,
parameters$rho)
# Not needed
# parameters2[parameters$covar == "independent" & parameters$rho != 0.2]$rho <- 0
run_simulations <- function(row) {
print(row)
iterations <- 5
n <- as.numeric(row["n"])
p <- as.numeric(row["p"])
error_var <- as.numeric(row["sigma"])^2
type <- row["covar"]
corr <- as.numeric(row["rho"])
results <- monte_carlo(n = n,
p = p,
iterations = iterations,
error_var = error_var,
type = type,
corr = corr)
save(results, file = paste("../../data/simulations/sim_results_", n, "_", p, "_", error_var, "_", type, "_", corr, ".Rdata", sep = ""))
}
apply(X = parameters, MARGIN = 1, FUN = run_simulations)
n <- c(20)
p <- c(8)
sigma <- c(1)
covar <- c("independent", "symmetric")
rho <- c(0.2, 0.5)
parameters <- expand.grid(n, p, sigma, covar, rho)
colnames(parameters) <- c("n", "p", "sigma", "covar", "rho")
# Delete extraneous rows caused by having covar = "independent." For
# rows with covar = "independent", set their rho to 0 (this is optional).
parameters <- parameters[!(parameters$covar == "independent" & parameters$rho != 0.2), ]
parameters$rho <- ifelse(parameters$covar == "independent",
0,
parameters$rho)
# Not needed
# parameters2[parameters$covar == "independent" & parameters$rho != 0.2]$rho <- 0
run_simulations <- function(row) {
print(row)
iterations <- 5
n <- as.numeric(row["n"])
p <- as.numeric(row["p"])
error_var <- as.numeric(row["sigma"])^2
type <- row["covar"]
corr <- as.numeric(row["rho"])
results <- monte_carlo(n = n,
p = p,
iterations = iterations,
error_var = error_var,
type = type,
corr = corr)
save(results, file = paste("../../data/simulations/sim_results_", n, "_", p, "_", error_var, "_", type, "_", corr, ".Rdata", sep = ""))
}
apply(X = parameters, MARGIN = 1, FUN = run_simulations)
library(stats)
?step
source('~/github/reu-2021/code/monte-carlo/simulation.r', echo=TRUE)
n <- c(20)
p <- c(8)
sigma <- c(1)
covar <- c("independent", "symmetric")
rho <- c(0.2, 0.5)
parameters <- expand.grid(n, p, sigma, covar, rho)
colnames(parameters) <- c("n", "p", "sigma", "covar", "rho")
# Delete extraneous rows caused by having covar = "independent." For
# rows with covar = "independent", set their rho to 0 (this is optional).
parameters <- parameters[!(parameters$covar == "independent" & parameters$rho != 0.2), ]
parameters$rho <- ifelse(parameters$covar == "independent",
0,
parameters$rho)
# Not needed
# parameters2[parameters$covar == "independent" & parameters$rho != 0.2]$rho <- 0
run_simulations <- function(row) {
print(row)
iterations <- 5
n <- as.numeric(row["n"])
p <- as.numeric(row["p"])
error_var <- as.numeric(row["sigma"])^2
type <- row["covar"]
corr <- as.numeric(row["rho"])
results <- monte_carlo(n = n,
p = p,
iterations = iterations,
error_var = error_var,
type = type,
corr = corr)
save(results, file = paste("../../data/simulations/sim_results_", n, "_", p, "_", error_var, "_", type, "_", corr, ".Rdata", sep = ""))
}
apply(X = parameters, MARGIN = 1, FUN = run_simulations)
n <- c(20)
p <- c(10)
sigma <- c(1)
covar <- c("independent", "symmetric")
rho <- c(0.2, 0.5)
parameters <- expand.grid(n, p, sigma, covar, rho)
colnames(parameters) <- c("n", "p", "sigma", "covar", "rho")
# Delete extraneous rows caused by having covar = "independent." For
# rows with covar = "independent", set their rho to 0 (this is optional).
parameters <- parameters[!(parameters$covar == "independent" & parameters$rho != 0.2), ]
parameters$rho <- ifelse(parameters$covar == "independent",
0,
parameters$rho)
# Not needed
# parameters2[parameters$covar == "independent" & parameters$rho != 0.2]$rho <- 0
run_simulations <- function(row) {
print(row)
iterations <- 5
n <- as.numeric(row["n"])
p <- as.numeric(row["p"])
error_var <- as.numeric(row["sigma"])^2
type <- row["covar"]
corr <- as.numeric(row["rho"])
results <- monte_carlo(n = n,
p = p,
iterations = iterations,
error_var = error_var,
type = type,
corr = corr)
save(results, file = paste("../../data/simulations/sim_results_", n, "_", p, "_", error_var, "_", type, "_", corr, ".Rdata", sep = ""))
}
apply(X = parameters, MARGIN = 1, FUN = run_simulations)
source('~/github/reu-2021/code/monte-carlo/simulation.r', echo=TRUE)
n <- c(20)
p <- c(30)
sigma <- c(1)
covar <- c("independent", "symmetric")
rho <- c(0.2, 0.5)
parameters <- expand.grid(n, p, sigma, covar, rho)
colnames(parameters) <- c("n", "p", "sigma", "covar", "rho")
# Delete extraneous rows caused by having covar = "independent." For
# rows with covar = "independent", set their rho to 0 (this is optional).
parameters <- parameters[!(parameters$covar == "independent" & parameters$rho != 0.2), ]
parameters$rho <- ifelse(parameters$covar == "independent",
0,
parameters$rho)
# Not needed
# parameters2[parameters$covar == "independent" & parameters$rho != 0.2]$rho <- 0
run_simulations <- function(row) {
print(row)
iterations <- 5
n <- as.numeric(row["n"])
p <- as.numeric(row["p"])
error_var <- as.numeric(row["sigma"])^2
type <- row["covar"]
corr <- as.numeric(row["rho"])
results <- monte_carlo(n = n,
p = p,
iterations = iterations,
error_var = error_var,
type = type,
corr = corr)
save(results, file = paste("../../data/simulations/sim_results_", n, "_", p, "_", error_var, "_", type, "_", corr, ".Rdata", sep = ""))
}
apply(X = parameters, MARGIN = 1, FUN = run_simulations)
dat <- monte_carlo(n = 100,
p = 10,
iterations = 5,
beta = c(1, 2, -2, 0, 0, 3, 0.5),
error_var = 1
)
View(dat)
View(dat[[1]][["coefficients"]])
source('~/github/reu-2021/code/monte-carlo/simulation.r', echo=TRUE)
dat <- monte_carlo(n = 100,
p = 10,
iterations = 5,
beta = c(1, 2, -2, 0, 0, 3, 0.5),
error_var = 1
)
View(dat)
View(dat[[1]][["coefficients"]])
source('~/github/reu-2021/code/monte-carlo/simulation.r', echo=TRUE)
dat <- monte_carlo(n = 100,
p = 10,
iterations = 5,
beta = c(1, 2, -2, 0, 0, 3, 0.5),
error_var = 1
)
View(dat)
View(dat[[1]][["coefficients"]])

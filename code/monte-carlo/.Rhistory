seed = 1
)
?xgb.train
?xgb.cv
?xgb.train
# monte-carlo.r
# Gabe Ackall, Seongtae Kim, Connor Shrader
# This file contains everything to be executed using the functions from
# simulation.r and metrics.r.
# R version: 4.1.0
library(tidyverse) # v1.3.1
library(dplyr) # v1.0.6
library(faux) # v1.0.0
library(ncvreg) # v3.13.0
library(glmnet) # v4.1-1
library(MASS) # v7.3-54
library(caret)
library(rstudioapi)
library(h2o)
library(bit64)
library(xgboost)
setwd(dirname(getActiveDocumentContext()$path))
source("simulation.r")
source("metrics.r")
# Initiate h2o
h2o.no_progress()
h2o.init(max_mem_size = "5g", ip = "localhost", startH2O = TRUE)  #start up h2o, use 5gb of ram
#random_data <- generate_data(seed = 1, n = 100, p = 10, corr = 0, type = "independent")
#models <- fit_models(dat = random_data, n = 100, p = 10)
#test_data <- generate_data(seed = 1, n = 100, p = 10, corr = 0, type = "independent")
#lasso_pred <- predict(models$lasso, as.matrix(test_data[, -1]))
#lasso_eval <- data.frame(lasso_pred, test_data[, 1])
#lasso_mse <- 1/100 * sum((lasso_eval[, 1] - lasso_eval[, 2])^2)
#rf_pred <- h2o.performance(models$rf, newdata = as.h2o(test_data))
#rf_pred <- as.data.frame(predict(object = models$rf, newdata = as.h2o(test_data[, -1])))
#rf_eval <- data.frame(rf_pred, test_data[, 1])
#rf_mse <- 1/100 * sum((rf_eval[, 1] - rf_eval[, 2])^2)
#rf_eval[3] <- lasso_eval[1]
#colnames(rf_eval) <- c("rf", "true", "lasso")
dat <- monte_carlo(n = 100,
p = 10,
type = "independent",
corr = 0,
sd = 1,
iterations = 1,
seed = 1
)
# monte-carlo.r
# Gabe Ackall, Seongtae Kim, Connor Shrader
# This file contains everything to be executed using the functions from
# simulation.r and metrics.r.
# R version: 4.1.0
library(tidyverse) # v1.3.1
library(dplyr) # v1.0.6
library(faux) # v1.0.0
library(ncvreg) # v3.13.0
library(glmnet) # v4.1-1
library(MASS) # v7.3-54
library(caret)
library(rstudioapi)
library(h2o)
library(bit64)
library(xgboost)
setwd(dirname(getActiveDocumentContext()$path))
source("simulation.r")
source("metrics.r")
# Initiate h2o
h2o.no_progress()
h2o.init(max_mem_size = "5g", ip = "localhost", startH2O = TRUE)  #start up h2o, use 5gb of ram
#random_data <- generate_data(seed = 1, n = 100, p = 10, corr = 0, type = "independent")
#models <- fit_models(dat = random_data, n = 100, p = 10)
#test_data <- generate_data(seed = 1, n = 100, p = 10, corr = 0, type = "independent")
#lasso_pred <- predict(models$lasso, as.matrix(test_data[, -1]))
#lasso_eval <- data.frame(lasso_pred, test_data[, 1])
#lasso_mse <- 1/100 * sum((lasso_eval[, 1] - lasso_eval[, 2])^2)
#rf_pred <- h2o.performance(models$rf, newdata = as.h2o(test_data))
#rf_pred <- as.data.frame(predict(object = models$rf, newdata = as.h2o(test_data[, -1])))
#rf_eval <- data.frame(rf_pred, test_data[, 1])
#rf_mse <- 1/100 * sum((rf_eval[, 1] - rf_eval[, 2])^2)
#rf_eval[3] <- lasso_eval[1]
#colnames(rf_eval) <- c("rf", "true", "lasso")
dat <- monte_carlo(n = 100,
p = 10,
type = "independent",
corr = 0,
sd = 1,
iterations = 1,
seed = 1
)
# monte-carlo.r
# Gabe Ackall, Seongtae Kim, Connor Shrader
# This file contains everything to be executed using the functions from
# simulation.r and metrics.r.
# R version: 4.1.0
library(tidyverse) # v1.3.1
library(dplyr) # v1.0.6
library(faux) # v1.0.0
library(ncvreg) # v3.13.0
library(glmnet) # v4.1-1
library(MASS) # v7.3-54
library(caret)
library(rstudioapi)
library(h2o)
library(bit64)
library(xgboost)
setwd(dirname(getActiveDocumentContext()$path))
source("simulation.r")
source("metrics.r")
# Initiate h2o
h2o.no_progress()
h2o.init(max_mem_size = "5g", ip = "localhost", startH2O = TRUE)  #start up h2o, use 5gb of ram
#random_data <- generate_data(seed = 1, n = 100, p = 10, corr = 0, type = "independent")
#models <- fit_models(dat = random_data, n = 100, p = 10)
#test_data <- generate_data(seed = 1, n = 100, p = 10, corr = 0, type = "independent")
#lasso_pred <- predict(models$lasso, as.matrix(test_data[, -1]))
#lasso_eval <- data.frame(lasso_pred, test_data[, 1])
#lasso_mse <- 1/100 * sum((lasso_eval[, 1] - lasso_eval[, 2])^2)
#rf_pred <- h2o.performance(models$rf, newdata = as.h2o(test_data))
#rf_pred <- as.data.frame(predict(object = models$rf, newdata = as.h2o(test_data[, -1])))
#rf_eval <- data.frame(rf_pred, test_data[, 1])
#rf_mse <- 1/100 * sum((rf_eval[, 1] - rf_eval[, 2])^2)
#rf_eval[3] <- lasso_eval[1]
#colnames(rf_eval) <- c("rf", "true", "lasso")
dat <- monte_carlo(n = 100,
p = 10,
type = "independent",
corr = 0,
sd = 1,
iterations = 1,
seed = 1
)
# monte-carlo.r
# Gabe Ackall, Seongtae Kim, Connor Shrader
# This file contains everything to be executed using the functions from
# simulation.r and metrics.r.
# R version: 4.1.0
library(tidyverse) # v1.3.1
library(dplyr) # v1.0.6
library(faux) # v1.0.0
library(ncvreg) # v3.13.0
library(glmnet) # v4.1-1
library(MASS) # v7.3-54
library(caret)
library(rstudioapi)
library(h2o)
library(bit64)
library(xgboost)
setwd(dirname(getActiveDocumentContext()$path))
source("simulation.r")
source("metrics.r")
# Initiate h2o
h2o.no_progress()
h2o.init(max_mem_size = "5g", ip = "localhost", startH2O = TRUE)  #start up h2o, use 5gb of ram
#random_data <- generate_data(seed = 1, n = 100, p = 10, corr = 0, type = "independent")
#models <- fit_models(dat = random_data, n = 100, p = 10)
#test_data <- generate_data(seed = 1, n = 100, p = 10, corr = 0, type = "independent")
#lasso_pred <- predict(models$lasso, as.matrix(test_data[, -1]))
#lasso_eval <- data.frame(lasso_pred, test_data[, 1])
#lasso_mse <- 1/100 * sum((lasso_eval[, 1] - lasso_eval[, 2])^2)
#rf_pred <- h2o.performance(models$rf, newdata = as.h2o(test_data))
#rf_pred <- as.data.frame(predict(object = models$rf, newdata = as.h2o(test_data[, -1])))
#rf_eval <- data.frame(rf_pred, test_data[, 1])
#rf_mse <- 1/100 * sum((rf_eval[, 1] - rf_eval[, 2])^2)
#rf_eval[3] <- lasso_eval[1]
#colnames(rf_eval) <- c("rf", "true", "lasso")
dat <- monte_carlo(n = 100,
p = 10,
type = "independent",
corr = 0,
sd = 1,
iterations = 1,
seed = 1
)
# monte-carlo.r
# Gabe Ackall, Seongtae Kim, Connor Shrader
# This file contains everything to be executed using the functions from
# simulation.r and metrics.r.
# R version: 4.1.0
library(tidyverse) # v1.3.1
library(dplyr) # v1.0.6
library(faux) # v1.0.0
library(ncvreg) # v3.13.0
library(glmnet) # v4.1-1
library(MASS) # v7.3-54
library(caret)
library(rstudioapi)
library(h2o)
library(bit64)
library(xgboost)
setwd(dirname(getActiveDocumentContext()$path))
source("simulation.r")
source("metrics.r")
# Initiate h2o
h2o.no_progress()
h2o.init(max_mem_size = "5g", ip = "localhost", startH2O = TRUE)  #start up h2o, use 5gb of ram
#random_data <- generate_data(seed = 1, n = 100, p = 10, corr = 0, type = "independent")
#models <- fit_models(dat = random_data, n = 100, p = 10)
#test_data <- generate_data(seed = 1, n = 100, p = 10, corr = 0, type = "independent")
#lasso_pred <- predict(models$lasso, as.matrix(test_data[, -1]))
#lasso_eval <- data.frame(lasso_pred, test_data[, 1])
#lasso_mse <- 1/100 * sum((lasso_eval[, 1] - lasso_eval[, 2])^2)
#rf_pred <- h2o.performance(models$rf, newdata = as.h2o(test_data))
#rf_pred <- as.data.frame(predict(object = models$rf, newdata = as.h2o(test_data[, -1])))
#rf_eval <- data.frame(rf_pred, test_data[, 1])
#rf_mse <- 1/100 * sum((rf_eval[, 1] - rf_eval[, 2])^2)
#rf_eval[3] <- lasso_eval[1]
#colnames(rf_eval) <- c("rf", "true", "lasso")
dat <- monte_carlo(n = 100,
p = 10,
type = "independent",
corr = 0,
sd = 1,
iterations = 1,
seed = 1
)
# monte-carlo.r
# Gabe Ackall, Seongtae Kim, Connor Shrader
# This file contains everything to be executed using the functions from
# simulation.r and metrics.r.
# R version: 4.1.0
library(tidyverse) # v1.3.1
library(dplyr) # v1.0.6
library(faux) # v1.0.0
library(ncvreg) # v3.13.0
library(glmnet) # v4.1-1
library(MASS) # v7.3-54
library(caret)
library(rstudioapi)
library(h2o)
library(bit64)
library(xgboost)
setwd(dirname(getActiveDocumentContext()$path))
source("simulation.r")
source("metrics.r")
# Initiate h2o
h2o.no_progress()
h2o.init(max_mem_size = "5g", ip = "localhost", startH2O = TRUE)  #start up h2o, use 5gb of ram
#random_data <- generate_data(seed = 1, n = 100, p = 10, corr = 0, type = "independent")
#models <- fit_models(dat = random_data, n = 100, p = 10)
#test_data <- generate_data(seed = 1, n = 100, p = 10, corr = 0, type = "independent")
#lasso_pred <- predict(models$lasso, as.matrix(test_data[, -1]))
#lasso_eval <- data.frame(lasso_pred, test_data[, 1])
#lasso_mse <- 1/100 * sum((lasso_eval[, 1] - lasso_eval[, 2])^2)
#rf_pred <- h2o.performance(models$rf, newdata = as.h2o(test_data))
#rf_pred <- as.data.frame(predict(object = models$rf, newdata = as.h2o(test_data[, -1])))
#rf_eval <- data.frame(rf_pred, test_data[, 1])
#rf_mse <- 1/100 * sum((rf_eval[, 1] - rf_eval[, 2])^2)
#rf_eval[3] <- lasso_eval[1]
#colnames(rf_eval) <- c("rf", "true", "lasso")
dat <- monte_carlo(n = 100,
p = 10,
type = "independent",
corr = 0,
sd = 1,
iterations = 1,
seed = 1
)
# monte-carlo.r
# Gabe Ackall, Seongtae Kim, Connor Shrader
# This file contains everything to be executed using the functions from
# simulation.r and metrics.r.
# R version: 4.1.0
library(tidyverse) # v1.3.1
library(dplyr) # v1.0.6
library(faux) # v1.0.0
library(ncvreg) # v3.13.0
library(glmnet) # v4.1-1
library(MASS) # v7.3-54
library(caret)
library(rstudioapi)
library(h2o)
library(bit64)
library(xgboost)
setwd(dirname(getActiveDocumentContext()$path))
source("simulation.r")
source("metrics.r")
# Initiate h2o
h2o.no_progress()
h2o.init(max_mem_size = "5g", ip = "localhost", startH2O = TRUE)  #start up h2o, use 5gb of ram
#random_data <- generate_data(seed = 1, n = 100, p = 10, corr = 0, type = "independent")
#models <- fit_models(dat = random_data, n = 100, p = 10)
#test_data <- generate_data(seed = 1, n = 100, p = 10, corr = 0, type = "independent")
#lasso_pred <- predict(models$lasso, as.matrix(test_data[, -1]))
#lasso_eval <- data.frame(lasso_pred, test_data[, 1])
#lasso_mse <- 1/100 * sum((lasso_eval[, 1] - lasso_eval[, 2])^2)
#rf_pred <- h2o.performance(models$rf, newdata = as.h2o(test_data))
#rf_pred <- as.data.frame(predict(object = models$rf, newdata = as.h2o(test_data[, -1])))
#rf_eval <- data.frame(rf_pred, test_data[, 1])
#rf_mse <- 1/100 * sum((rf_eval[, 1] - rf_eval[, 2])^2)
#rf_eval[3] <- lasso_eval[1]
#colnames(rf_eval) <- c("rf", "true", "lasso")
dat <- monte_carlo(n = 100,
p = 10,
type = "independent",
corr = 0,
sd = 1,
iterations = 1,
seed = 1
)
?xgb.predict
# monte-carlo.r
# Gabe Ackall, Seongtae Kim, Connor Shrader
# This file contains everything to be executed using the functions from
# simulation.r and metrics.r.
# R version: 4.1.0
library(tidyverse) # v1.3.1
library(dplyr) # v1.0.6
library(faux) # v1.0.0
library(ncvreg) # v3.13.0
library(glmnet) # v4.1-1
library(MASS) # v7.3-54
library(caret)
library(rstudioapi)
library(h2o)
library(bit64)
library(xgboost)
setwd(dirname(getActiveDocumentContext()$path))
source("simulation.r")
source("metrics.r")
# Initiate h2o
h2o.no_progress()
h2o.init(max_mem_size = "5g", ip = "localhost", startH2O = TRUE)  #start up h2o, use 5gb of ram
#random_data <- generate_data(seed = 1, n = 100, p = 10, corr = 0, type = "independent")
#models <- fit_models(dat = random_data, n = 100, p = 10)
#test_data <- generate_data(seed = 1, n = 100, p = 10, corr = 0, type = "independent")
#lasso_pred <- predict(models$lasso, as.matrix(test_data[, -1]))
#lasso_eval <- data.frame(lasso_pred, test_data[, 1])
#lasso_mse <- 1/100 * sum((lasso_eval[, 1] - lasso_eval[, 2])^2)
#rf_pred <- h2o.performance(models$rf, newdata = as.h2o(test_data))
#rf_pred <- as.data.frame(predict(object = models$rf, newdata = as.h2o(test_data[, -1])))
#rf_eval <- data.frame(rf_pred, test_data[, 1])
#rf_mse <- 1/100 * sum((rf_eval[, 1] - rf_eval[, 2])^2)
#rf_eval[3] <- lasso_eval[1]
#colnames(rf_eval) <- c("rf", "true", "lasso")
dat <- monte_carlo(n = 100,
p = 10,
type = "independent",
corr = 0,
sd = 1,
iterations = 1,
seed = 1
)
?predict.xgb.Booster
# monte-carlo.r
# Gabe Ackall, Seongtae Kim, Connor Shrader
# This file contains everything to be executed using the functions from
# simulation.r and metrics.r.
# R version: 4.1.0
library(tidyverse) # v1.3.1
library(dplyr) # v1.0.6
library(faux) # v1.0.0
library(ncvreg) # v3.13.0
library(glmnet) # v4.1-1
library(MASS) # v7.3-54
library(caret)
library(rstudioapi)
library(h2o)
library(bit64)
library(xgboost)
setwd(dirname(getActiveDocumentContext()$path))
source("simulation.r")
source("metrics.r")
# Initiate h2o
h2o.no_progress()
h2o.init(max_mem_size = "5g", ip = "localhost", startH2O = TRUE)  #start up h2o, use 5gb of ram
#random_data <- generate_data(seed = 1, n = 100, p = 10, corr = 0, type = "independent")
#models <- fit_models(dat = random_data, n = 100, p = 10)
#test_data <- generate_data(seed = 1, n = 100, p = 10, corr = 0, type = "independent")
#lasso_pred <- predict(models$lasso, as.matrix(test_data[, -1]))
#lasso_eval <- data.frame(lasso_pred, test_data[, 1])
#lasso_mse <- 1/100 * sum((lasso_eval[, 1] - lasso_eval[, 2])^2)
#rf_pred <- h2o.performance(models$rf, newdata = as.h2o(test_data))
#rf_pred <- as.data.frame(predict(object = models$rf, newdata = as.h2o(test_data[, -1])))
#rf_eval <- data.frame(rf_pred, test_data[, 1])
#rf_mse <- 1/100 * sum((rf_eval[, 1] - rf_eval[, 2])^2)
#rf_eval[3] <- lasso_eval[1]
#colnames(rf_eval) <- c("rf", "true", "lasso")
dat <- monte_carlo(n = 100,
p = 10,
type = "independent",
corr = 0,
sd = 1,
iterations = 1,
seed = 1
)
# monte-carlo.r
# Gabe Ackall, Seongtae Kim, Connor Shrader
# This file contains everything to be executed using the functions from
# simulation.r and metrics.r.
# R version: 4.1.0
library(tidyverse) # v1.3.1
library(dplyr) # v1.0.6
library(faux) # v1.0.0
library(ncvreg) # v3.13.0
library(glmnet) # v4.1-1
library(MASS) # v7.3-54
library(caret)
library(rstudioapi)
library(h2o)
library(bit64)
library(xgboost)
setwd(dirname(getActiveDocumentContext()$path))
source("simulation.r")
source("metrics.r")
# Initiate h2o
h2o.no_progress()
h2o.init(max_mem_size = "5g", ip = "localhost", startH2O = TRUE)  #start up h2o, use 5gb of ram
#random_data <- generate_data(seed = 1, n = 100, p = 10, corr = 0, type = "independent")
#models <- fit_models(dat = random_data, n = 100, p = 10)
#test_data <- generate_data(seed = 1, n = 100, p = 10, corr = 0, type = "independent")
#lasso_pred <- predict(models$lasso, as.matrix(test_data[, -1]))
#lasso_eval <- data.frame(lasso_pred, test_data[, 1])
#lasso_mse <- 1/100 * sum((lasso_eval[, 1] - lasso_eval[, 2])^2)
#rf_pred <- h2o.performance(models$rf, newdata = as.h2o(test_data))
#rf_pred <- as.data.frame(predict(object = models$rf, newdata = as.h2o(test_data[, -1])))
#rf_eval <- data.frame(rf_pred, test_data[, 1])
#rf_mse <- 1/100 * sum((rf_eval[, 1] - rf_eval[, 2])^2)
#rf_eval[3] <- lasso_eval[1]
#colnames(rf_eval) <- c("rf", "true", "lasso")
dat <- monte_carlo(n = 100,
p = 10,
type = "independent",
corr = 0,
sd = 1,
iterations = 1,
seed = 1
)
# monte-carlo.r
# Gabe Ackall, Seongtae Kim, Connor Shrader
# This file contains everything to be executed using the functions from
# simulation.r and metrics.r.
# R version: 4.1.0
library(tidyverse) # v1.3.1
library(dplyr) # v1.0.6
library(faux) # v1.0.0
library(ncvreg) # v3.13.0
library(glmnet) # v4.1-1
library(MASS) # v7.3-54
library(caret)
library(rstudioapi)
library(h2o)
library(bit64)
library(xgboost)
setwd(dirname(getActiveDocumentContext()$path))
source("simulation.r")
source("metrics.r")
# Initiate h2o
h2o.no_progress()
h2o.init(max_mem_size = "5g", ip = "localhost", startH2O = TRUE)  #start up h2o, use 5gb of ram
#random_data <- generate_data(seed = 1, n = 100, p = 10, corr = 0, type = "independent")
#models <- fit_models(dat = random_data, n = 100, p = 10)
#test_data <- generate_data(seed = 1, n = 100, p = 10, corr = 0, type = "independent")
#lasso_pred <- predict(models$lasso, as.matrix(test_data[, -1]))
#lasso_eval <- data.frame(lasso_pred, test_data[, 1])
#lasso_mse <- 1/100 * sum((lasso_eval[, 1] - lasso_eval[, 2])^2)
#rf_pred <- h2o.performance(models$rf, newdata = as.h2o(test_data))
#rf_pred <- as.data.frame(predict(object = models$rf, newdata = as.h2o(test_data[, -1])))
#rf_eval <- data.frame(rf_pred, test_data[, 1])
#rf_mse <- 1/100 * sum((rf_eval[, 1] - rf_eval[, 2])^2)
#rf_eval[3] <- lasso_eval[1]
#colnames(rf_eval) <- c("rf", "true", "lasso")
dat <- monte_carlo(n = 100,
p = 10,
type = "independent",
corr = 0,
sd = 1,
iterations = 1,
seed = 1
)
# monte-carlo.r
# Gabe Ackall, Seongtae Kim, Connor Shrader
# This file contains everything to be executed using the functions from
# simulation.r and metrics.r.
# R version: 4.1.0
library(tidyverse) # v1.3.1
library(dplyr) # v1.0.6
library(faux) # v1.0.0
library(ncvreg) # v3.13.0
library(glmnet) # v4.1-1
library(MASS) # v7.3-54
library(caret)
library(rstudioapi)
library(h2o)
library(bit64)
library(xgboost)
setwd(dirname(getActiveDocumentContext()$path))
source("simulation.r")
source("metrics.r")
# Initiate h2o
h2o.no_progress()
h2o.init(max_mem_size = "5g", ip = "localhost", startH2O = TRUE)  #start up h2o, use 5gb of ram
#random_data <- generate_data(seed = 1, n = 100, p = 10, corr = 0, type = "independent")
#models <- fit_models(dat = random_data, n = 100, p = 10)
#test_data <- generate_data(seed = 1, n = 100, p = 10, corr = 0, type = "independent")
#lasso_pred <- predict(models$lasso, as.matrix(test_data[, -1]))
#lasso_eval <- data.frame(lasso_pred, test_data[, 1])
#lasso_mse <- 1/100 * sum((lasso_eval[, 1] - lasso_eval[, 2])^2)
#rf_pred <- h2o.performance(models$rf, newdata = as.h2o(test_data))
#rf_pred <- as.data.frame(predict(object = models$rf, newdata = as.h2o(test_data[, -1])))
#rf_eval <- data.frame(rf_pred, test_data[, 1])
#rf_mse <- 1/100 * sum((rf_eval[, 1] - rf_eval[, 2])^2)
#rf_eval[3] <- lasso_eval[1]
#colnames(rf_eval) <- c("rf", "true", "lasso")
dat <- monte_carlo(n = 100,
p = 10,
type = "independent",
corr = 0,
sd = 1,
iterations = 1,
seed = 1
)
View(dat)

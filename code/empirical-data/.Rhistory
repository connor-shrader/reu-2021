rm(list = ls())
library(ggplot2)
library(broom)
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
source("themes.r")
load("../empirical-data/simulation-environment.RData")
View(lasso)
View(adap_lasso)
View(adap_ridge)
View(adap_enet)
View(adap_enet)
View(adap_lasso)
source('~/github/reu-2021/code/empirical-data/models.R', echo=TRUE)
install.packages("randomForest")
source('~/github/reu-2021/code/empirical-data/models.R', echo=TRUE)
source('~/github/reu-2021/code/empirical-data/models.R', echo=TRUE)
View(mse_df)
View(lasso)
View(lasso)
View(lasso)
View(adap_lasso)
source('~/github/reu-2021/code/empirical-data/models.R', echo=TRUE)
# Analysis of bcTCGA breast cancer gene expression data
library(glmnet)
library(gcdnet)
library(ncvreg)
library(ranger)
library(randomForest)
library(xgboost)
library(e1071)
library(caret) #for cross validation data splitting
library(tidyverse) #data cleaning
# prevent stack overflow
options(expressions = 5e5)
memory.limit(size=8000000)
#set seed
set.seed(12345)
# load data and set it up into a dataframe
library(rstudioapi)
setwd(dirname(getActiveDocumentContext()$path))
cancer <- readRDS("bcTCGA.rds")
cancer[["X"]] <- scale(cancer[["X"]], center = TRUE, scale = TRUE)
cancer_df <- as.data.frame(cbind(cancer[["y"]], cancer[["X"]])) #turn matrix into dataframe
colnames(cancer_df)[1] <- "y" #rename y column to "y"
set.seed(1)
lasso <- cv.glmnet(x = as.matrix(train_dat[, -1]), y = as.matrix(train_dat[, 1]), alpha = 1)
set.seed(1)
adap_lasso <- cv.gcdnet(x = as.matrix(train_dat[, -1]), y = train_dat[, 1], method = "ls", lambda2 = 0)
View(lasso)
View(adap_lasso)
View(lasso)
